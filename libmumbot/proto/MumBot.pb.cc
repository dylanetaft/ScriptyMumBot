// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mumbot.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mumbot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace libmumbot {

namespace {

const ::google::protobuf::Descriptor* TextMessageRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TextMessageRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TextMessageResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TextMessageResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TextMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TextMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mumbot_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mumbot_2eproto() {
  protobuf_AddDesc_mumbot_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mumbot.proto");
  GOOGLE_CHECK(file != NULL);
  TextMessageRequest_descriptor_ = file->message_type(0);
  static const int TextMessageRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessageRequest, regex_search_pattern_),
  };
  TextMessageRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TextMessageRequest_descriptor_,
      TextMessageRequest::default_instance_,
      TextMessageRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(TextMessageRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessageRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessageRequest, _is_default_instance_));
  TextMessageResponse_descriptor_ = file->message_type(1);
  static const int TextMessageResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessageResponse, success_),
  };
  TextMessageResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TextMessageResponse_descriptor_,
      TextMessageResponse::default_instance_,
      TextMessageResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(TextMessageResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessageResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessageResponse, _is_default_instance_));
  TextMessage_descriptor_ = file->message_type(2);
  static const int TextMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessage, msg_),
  };
  TextMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TextMessage_descriptor_,
      TextMessage::default_instance_,
      TextMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(TextMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mumbot_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TextMessageRequest_descriptor_, &TextMessageRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TextMessageResponse_descriptor_, &TextMessageResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TextMessage_descriptor_, &TextMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mumbot_2eproto() {
  delete TextMessageRequest::default_instance_;
  delete TextMessageRequest_reflection_;
  delete TextMessageResponse::default_instance_;
  delete TextMessageResponse_reflection_;
  delete TextMessage::default_instance_;
  delete TextMessage_reflection_;
}

void protobuf_AddDesc_mumbot_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_mumbot_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014mumbot.proto\022\tlibmumbot\"2\n\022TextMessage"
    "Request\022\034\n\024regex_search_pattern\030\001 \001(\t\"&\n"
    "\023TextMessageResponse\022\017\n\007success\030\001 \001(\010\"\032\n"
    "\013TextMessage\022\013\n\003msg\030\001 \001(\t2\242\001\n\tMumBotRPC\022"
    "\?\n\003Say\022\026.libmumbot.TextMessage\032\036.libmumb"
    "ot.TextMessageResponse\"\000\022T\n\027SubscribeToT"
    "extMessages\022\035.libmumbot.TextMessageReque"
    "st\032\026.libmumbot.TextMessage\"\0000\001b\006proto3", 318);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mumbot.proto", &protobuf_RegisterTypes);
  TextMessageRequest::default_instance_ = new TextMessageRequest();
  TextMessageResponse::default_instance_ = new TextMessageResponse();
  TextMessage::default_instance_ = new TextMessage();
  TextMessageRequest::default_instance_->InitAsDefaultInstance();
  TextMessageResponse::default_instance_->InitAsDefaultInstance();
  TextMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mumbot_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mumbot_2eproto {
  StaticDescriptorInitializer_mumbot_2eproto() {
    protobuf_AddDesc_mumbot_2eproto();
  }
} static_descriptor_initializer_mumbot_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextMessageRequest::kRegexSearchPatternFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextMessageRequest::TextMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:libmumbot.TextMessageRequest)
}

void TextMessageRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TextMessageRequest::TextMessageRequest(const TextMessageRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:libmumbot.TextMessageRequest)
}

void TextMessageRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  regex_search_pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TextMessageRequest::~TextMessageRequest() {
  // @@protoc_insertion_point(destructor:libmumbot.TextMessageRequest)
  SharedDtor();
}

void TextMessageRequest::SharedDtor() {
  regex_search_pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TextMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextMessageRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TextMessageRequest_descriptor_;
}

const TextMessageRequest& TextMessageRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mumbot_2eproto();
  return *default_instance_;
}

TextMessageRequest* TextMessageRequest::default_instance_ = NULL;

TextMessageRequest* TextMessageRequest::New(::google::protobuf::Arena* arena) const {
  TextMessageRequest* n = new TextMessageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TextMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:libmumbot.TextMessageRequest)
  regex_search_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TextMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:libmumbot.TextMessageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string regex_search_pattern = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex_search_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex_search_pattern().data(), this->regex_search_pattern().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "libmumbot.TextMessageRequest.regex_search_pattern"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:libmumbot.TextMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:libmumbot.TextMessageRequest)
  return false;
#undef DO_
}

void TextMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:libmumbot.TextMessageRequest)
  // optional string regex_search_pattern = 1;
  if (this->regex_search_pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex_search_pattern().data(), this->regex_search_pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "libmumbot.TextMessageRequest.regex_search_pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->regex_search_pattern(), output);
  }

  // @@protoc_insertion_point(serialize_end:libmumbot.TextMessageRequest)
}

::google::protobuf::uint8* TextMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:libmumbot.TextMessageRequest)
  // optional string regex_search_pattern = 1;
  if (this->regex_search_pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex_search_pattern().data(), this->regex_search_pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "libmumbot.TextMessageRequest.regex_search_pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->regex_search_pattern(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:libmumbot.TextMessageRequest)
  return target;
}

int TextMessageRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:libmumbot.TextMessageRequest)
  int total_size = 0;

  // optional string regex_search_pattern = 1;
  if (this->regex_search_pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regex_search_pattern());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:libmumbot.TextMessageRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TextMessageRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TextMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:libmumbot.TextMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:libmumbot.TextMessageRequest)
    MergeFrom(*source);
  }
}

void TextMessageRequest::MergeFrom(const TextMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:libmumbot.TextMessageRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.regex_search_pattern().size() > 0) {

    regex_search_pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_search_pattern_);
  }
}

void TextMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:libmumbot.TextMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextMessageRequest::CopyFrom(const TextMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:libmumbot.TextMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextMessageRequest::IsInitialized() const {

  return true;
}

void TextMessageRequest::Swap(TextMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextMessageRequest::InternalSwap(TextMessageRequest* other) {
  regex_search_pattern_.Swap(&other->regex_search_pattern_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextMessageRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TextMessageRequest_descriptor_;
  metadata.reflection = TextMessageRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextMessageRequest

// optional string regex_search_pattern = 1;
void TextMessageRequest::clear_regex_search_pattern() {
  regex_search_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TextMessageRequest::regex_search_pattern() const {
  // @@protoc_insertion_point(field_get:libmumbot.TextMessageRequest.regex_search_pattern)
  return regex_search_pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TextMessageRequest::set_regex_search_pattern(const ::std::string& value) {
  
  regex_search_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:libmumbot.TextMessageRequest.regex_search_pattern)
}
 void TextMessageRequest::set_regex_search_pattern(const char* value) {
  
  regex_search_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:libmumbot.TextMessageRequest.regex_search_pattern)
}
 void TextMessageRequest::set_regex_search_pattern(const char* value, size_t size) {
  
  regex_search_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:libmumbot.TextMessageRequest.regex_search_pattern)
}
 ::std::string* TextMessageRequest::mutable_regex_search_pattern() {
  
  // @@protoc_insertion_point(field_mutable:libmumbot.TextMessageRequest.regex_search_pattern)
  return regex_search_pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TextMessageRequest::release_regex_search_pattern() {
  // @@protoc_insertion_point(field_release:libmumbot.TextMessageRequest.regex_search_pattern)
  
  return regex_search_pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TextMessageRequest::set_allocated_regex_search_pattern(::std::string* regex_search_pattern) {
  if (regex_search_pattern != NULL) {
    
  } else {
    
  }
  regex_search_pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regex_search_pattern);
  // @@protoc_insertion_point(field_set_allocated:libmumbot.TextMessageRequest.regex_search_pattern)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextMessageResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextMessageResponse::TextMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:libmumbot.TextMessageResponse)
}

void TextMessageResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TextMessageResponse::TextMessageResponse(const TextMessageResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:libmumbot.TextMessageResponse)
}

void TextMessageResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  success_ = false;
}

TextMessageResponse::~TextMessageResponse() {
  // @@protoc_insertion_point(destructor:libmumbot.TextMessageResponse)
  SharedDtor();
}

void TextMessageResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TextMessageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextMessageResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TextMessageResponse_descriptor_;
}

const TextMessageResponse& TextMessageResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mumbot_2eproto();
  return *default_instance_;
}

TextMessageResponse* TextMessageResponse::default_instance_ = NULL;

TextMessageResponse* TextMessageResponse::New(::google::protobuf::Arena* arena) const {
  TextMessageResponse* n = new TextMessageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TextMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:libmumbot.TextMessageResponse)
  success_ = false;
}

bool TextMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:libmumbot.TextMessageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:libmumbot.TextMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:libmumbot.TextMessageResponse)
  return false;
#undef DO_
}

void TextMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:libmumbot.TextMessageResponse)
  // optional bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // @@protoc_insertion_point(serialize_end:libmumbot.TextMessageResponse)
}

::google::protobuf::uint8* TextMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:libmumbot.TextMessageResponse)
  // optional bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:libmumbot.TextMessageResponse)
  return target;
}

int TextMessageResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:libmumbot.TextMessageResponse)
  int total_size = 0;

  // optional bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:libmumbot.TextMessageResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TextMessageResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TextMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:libmumbot.TextMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:libmumbot.TextMessageResponse)
    MergeFrom(*source);
  }
}

void TextMessageResponse::MergeFrom(const TextMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:libmumbot.TextMessageResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void TextMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:libmumbot.TextMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextMessageResponse::CopyFrom(const TextMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:libmumbot.TextMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextMessageResponse::IsInitialized() const {

  return true;
}

void TextMessageResponse::Swap(TextMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextMessageResponse::InternalSwap(TextMessageResponse* other) {
  std::swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextMessageResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TextMessageResponse_descriptor_;
  metadata.reflection = TextMessageResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextMessageResponse

// optional bool success = 1;
void TextMessageResponse::clear_success() {
  success_ = false;
}
 bool TextMessageResponse::success() const {
  // @@protoc_insertion_point(field_get:libmumbot.TextMessageResponse.success)
  return success_;
}
 void TextMessageResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:libmumbot.TextMessageResponse.success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextMessage::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextMessage::TextMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:libmumbot.TextMessage)
}

void TextMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TextMessage::TextMessage(const TextMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:libmumbot.TextMessage)
}

void TextMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TextMessage::~TextMessage() {
  // @@protoc_insertion_point(destructor:libmumbot.TextMessage)
  SharedDtor();
}

void TextMessage::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TextMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TextMessage_descriptor_;
}

const TextMessage& TextMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mumbot_2eproto();
  return *default_instance_;
}

TextMessage* TextMessage::default_instance_ = NULL;

TextMessage* TextMessage::New(::google::protobuf::Arena* arena) const {
  TextMessage* n = new TextMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TextMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:libmumbot.TextMessage)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TextMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:libmumbot.TextMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "libmumbot.TextMessage.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:libmumbot.TextMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:libmumbot.TextMessage)
  return false;
#undef DO_
}

void TextMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:libmumbot.TextMessage)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "libmumbot.TextMessage.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:libmumbot.TextMessage)
}

::google::protobuf::uint8* TextMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:libmumbot.TextMessage)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "libmumbot.TextMessage.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:libmumbot.TextMessage)
  return target;
}

int TextMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:libmumbot.TextMessage)
  int total_size = 0;

  // optional string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:libmumbot.TextMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TextMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TextMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:libmumbot.TextMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:libmumbot.TextMessage)
    MergeFrom(*source);
  }
}

void TextMessage::MergeFrom(const TextMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:libmumbot.TextMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void TextMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:libmumbot.TextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextMessage::CopyFrom(const TextMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:libmumbot.TextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextMessage::IsInitialized() const {

  return true;
}

void TextMessage::Swap(TextMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextMessage::InternalSwap(TextMessage* other) {
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TextMessage_descriptor_;
  metadata.reflection = TextMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextMessage

// optional string msg = 1;
void TextMessage::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TextMessage::msg() const {
  // @@protoc_insertion_point(field_get:libmumbot.TextMessage.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TextMessage::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:libmumbot.TextMessage.msg)
}
 void TextMessage::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:libmumbot.TextMessage.msg)
}
 void TextMessage::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:libmumbot.TextMessage.msg)
}
 ::std::string* TextMessage::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:libmumbot.TextMessage.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TextMessage::release_msg() {
  // @@protoc_insertion_point(field_release:libmumbot.TextMessage.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TextMessage::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:libmumbot.TextMessage.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace libmumbot

// @@protoc_insertion_point(global_scope)
