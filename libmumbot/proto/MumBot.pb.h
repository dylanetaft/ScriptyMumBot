// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MumBot.proto

#ifndef PROTOBUF_MumBot_2eproto__INCLUDED
#define PROTOBUF_MumBot_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MumBotProto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MumBot_2eproto();
void protobuf_AssignDesc_MumBot_2eproto();
void protobuf_ShutdownFile_MumBot_2eproto();

class TextMessage;
class TextMessageRequest;
class TextMessageResponse;

// ===================================================================

class TextMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MumBotProto.TextMessageRequest) */ {
 public:
  TextMessageRequest();
  virtual ~TextMessageRequest();

  TextMessageRequest(const TextMessageRequest& from);

  inline TextMessageRequest& operator=(const TextMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TextMessageRequest& default_instance();

  void Swap(TextMessageRequest* other);

  // implements Message ----------------------------------------------

  inline TextMessageRequest* New() const { return New(NULL); }

  TextMessageRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TextMessageRequest& from);
  void MergeFrom(const TextMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TextMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string regex_search_pattern = 1;
  void clear_regex_search_pattern();
  static const int kRegexSearchPatternFieldNumber = 1;
  const ::std::string& regex_search_pattern() const;
  void set_regex_search_pattern(const ::std::string& value);
  void set_regex_search_pattern(const char* value);
  void set_regex_search_pattern(const char* value, size_t size);
  ::std::string* mutable_regex_search_pattern();
  ::std::string* release_regex_search_pattern();
  void set_allocated_regex_search_pattern(::std::string* regex_search_pattern);

  // @@protoc_insertion_point(class_scope:MumBotProto.TextMessageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr regex_search_pattern_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MumBot_2eproto();
  friend void protobuf_AssignDesc_MumBot_2eproto();
  friend void protobuf_ShutdownFile_MumBot_2eproto();

  void InitAsDefaultInstance();
  static TextMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class TextMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MumBotProto.TextMessageResponse) */ {
 public:
  TextMessageResponse();
  virtual ~TextMessageResponse();

  TextMessageResponse(const TextMessageResponse& from);

  inline TextMessageResponse& operator=(const TextMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TextMessageResponse& default_instance();

  void Swap(TextMessageResponse* other);

  // implements Message ----------------------------------------------

  inline TextMessageResponse* New() const { return New(NULL); }

  TextMessageResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TextMessageResponse& from);
  void MergeFrom(const TextMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TextMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:MumBotProto.TextMessageResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool success_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MumBot_2eproto();
  friend void protobuf_AssignDesc_MumBot_2eproto();
  friend void protobuf_ShutdownFile_MumBot_2eproto();

  void InitAsDefaultInstance();
  static TextMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class TextMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MumBotProto.TextMessage) */ {
 public:
  TextMessage();
  virtual ~TextMessage();

  TextMessage(const TextMessage& from);

  inline TextMessage& operator=(const TextMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TextMessage& default_instance();

  void Swap(TextMessage* other);

  // implements Message ----------------------------------------------

  inline TextMessage* New() const { return New(NULL); }

  TextMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TextMessage& from);
  void MergeFrom(const TextMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TextMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string fromName = 2;
  void clear_fromname();
  static const int kFromNameFieldNumber = 2;
  const ::std::string& fromname() const;
  void set_fromname(const ::std::string& value);
  void set_fromname(const char* value);
  void set_fromname(const char* value, size_t size);
  ::std::string* mutable_fromname();
  ::std::string* release_fromname();
  void set_allocated_fromname(::std::string* fromname);

  // repeated string toName = 3;
  int toname_size() const;
  void clear_toname();
  static const int kToNameFieldNumber = 3;
  const ::std::string& toname(int index) const;
  ::std::string* mutable_toname(int index);
  void set_toname(int index, const ::std::string& value);
  void set_toname(int index, const char* value);
  void set_toname(int index, const char* value, size_t size);
  ::std::string* add_toname();
  void add_toname(const ::std::string& value);
  void add_toname(const char* value);
  void add_toname(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& toname() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_toname();

  // @@protoc_insertion_point(class_scope:MumBotProto.TextMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr fromname_;
  ::google::protobuf::RepeatedPtrField< ::std::string> toname_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MumBot_2eproto();
  friend void protobuf_AssignDesc_MumBot_2eproto();
  friend void protobuf_ShutdownFile_MumBot_2eproto();

  void InitAsDefaultInstance();
  static TextMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TextMessageRequest

// optional string regex_search_pattern = 1;
inline void TextMessageRequest::clear_regex_search_pattern() {
  regex_search_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TextMessageRequest::regex_search_pattern() const {
  // @@protoc_insertion_point(field_get:MumBotProto.TextMessageRequest.regex_search_pattern)
  return regex_search_pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TextMessageRequest::set_regex_search_pattern(const ::std::string& value) {
  
  regex_search_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MumBotProto.TextMessageRequest.regex_search_pattern)
}
inline void TextMessageRequest::set_regex_search_pattern(const char* value) {
  
  regex_search_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MumBotProto.TextMessageRequest.regex_search_pattern)
}
inline void TextMessageRequest::set_regex_search_pattern(const char* value, size_t size) {
  
  regex_search_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MumBotProto.TextMessageRequest.regex_search_pattern)
}
inline ::std::string* TextMessageRequest::mutable_regex_search_pattern() {
  
  // @@protoc_insertion_point(field_mutable:MumBotProto.TextMessageRequest.regex_search_pattern)
  return regex_search_pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TextMessageRequest::release_regex_search_pattern() {
  // @@protoc_insertion_point(field_release:MumBotProto.TextMessageRequest.regex_search_pattern)
  
  return regex_search_pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TextMessageRequest::set_allocated_regex_search_pattern(::std::string* regex_search_pattern) {
  if (regex_search_pattern != NULL) {
    
  } else {
    
  }
  regex_search_pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regex_search_pattern);
  // @@protoc_insertion_point(field_set_allocated:MumBotProto.TextMessageRequest.regex_search_pattern)
}

// -------------------------------------------------------------------

// TextMessageResponse

// optional bool success = 1;
inline void TextMessageResponse::clear_success() {
  success_ = false;
}
inline bool TextMessageResponse::success() const {
  // @@protoc_insertion_point(field_get:MumBotProto.TextMessageResponse.success)
  return success_;
}
inline void TextMessageResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:MumBotProto.TextMessageResponse.success)
}

// -------------------------------------------------------------------

// TextMessage

// optional string msg = 1;
inline void TextMessage::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TextMessage::msg() const {
  // @@protoc_insertion_point(field_get:MumBotProto.TextMessage.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TextMessage::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MumBotProto.TextMessage.msg)
}
inline void TextMessage::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MumBotProto.TextMessage.msg)
}
inline void TextMessage::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MumBotProto.TextMessage.msg)
}
inline ::std::string* TextMessage::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:MumBotProto.TextMessage.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TextMessage::release_msg() {
  // @@protoc_insertion_point(field_release:MumBotProto.TextMessage.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TextMessage::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:MumBotProto.TextMessage.msg)
}

// optional string fromName = 2;
inline void TextMessage::clear_fromname() {
  fromname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TextMessage::fromname() const {
  // @@protoc_insertion_point(field_get:MumBotProto.TextMessage.fromName)
  return fromname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TextMessage::set_fromname(const ::std::string& value) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MumBotProto.TextMessage.fromName)
}
inline void TextMessage::set_fromname(const char* value) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MumBotProto.TextMessage.fromName)
}
inline void TextMessage::set_fromname(const char* value, size_t size) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MumBotProto.TextMessage.fromName)
}
inline ::std::string* TextMessage::mutable_fromname() {
  
  // @@protoc_insertion_point(field_mutable:MumBotProto.TextMessage.fromName)
  return fromname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TextMessage::release_fromname() {
  // @@protoc_insertion_point(field_release:MumBotProto.TextMessage.fromName)
  
  return fromname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TextMessage::set_allocated_fromname(::std::string* fromname) {
  if (fromname != NULL) {
    
  } else {
    
  }
  fromname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromname);
  // @@protoc_insertion_point(field_set_allocated:MumBotProto.TextMessage.fromName)
}

// repeated string toName = 3;
inline int TextMessage::toname_size() const {
  return toname_.size();
}
inline void TextMessage::clear_toname() {
  toname_.Clear();
}
inline const ::std::string& TextMessage::toname(int index) const {
  // @@protoc_insertion_point(field_get:MumBotProto.TextMessage.toName)
  return toname_.Get(index);
}
inline ::std::string* TextMessage::mutable_toname(int index) {
  // @@protoc_insertion_point(field_mutable:MumBotProto.TextMessage.toName)
  return toname_.Mutable(index);
}
inline void TextMessage::set_toname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MumBotProto.TextMessage.toName)
  toname_.Mutable(index)->assign(value);
}
inline void TextMessage::set_toname(int index, const char* value) {
  toname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MumBotProto.TextMessage.toName)
}
inline void TextMessage::set_toname(int index, const char* value, size_t size) {
  toname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MumBotProto.TextMessage.toName)
}
inline ::std::string* TextMessage::add_toname() {
  // @@protoc_insertion_point(field_add_mutable:MumBotProto.TextMessage.toName)
  return toname_.Add();
}
inline void TextMessage::add_toname(const ::std::string& value) {
  toname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MumBotProto.TextMessage.toName)
}
inline void TextMessage::add_toname(const char* value) {
  toname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MumBotProto.TextMessage.toName)
}
inline void TextMessage::add_toname(const char* value, size_t size) {
  toname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MumBotProto.TextMessage.toName)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TextMessage::toname() const {
  // @@protoc_insertion_point(field_list:MumBotProto.TextMessage.toName)
  return toname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TextMessage::mutable_toname() {
  // @@protoc_insertion_point(field_mutable_list:MumBotProto.TextMessage.toName)
  return &toname_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MumBotProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MumBot_2eproto__INCLUDED
