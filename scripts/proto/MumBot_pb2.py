# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: MumBot.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='MumBot.proto',
  package='libmumbot.protobuf',
  syntax='proto3',
  serialized_pb=_b('\n\x0cMumBot.proto\x12\x12libmumbot.protobuf\"2\n\x12TextMessageRequest\x12\x1c\n\x14regex_search_pattern\x18\x01 \x01(\t\"&\n\x13TextMessageResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\"\x1a\n\x0bTextMessage\x12\x0b\n\x03msg\x18\x01 \x01(\t2\xc6\x01\n\tMumBotRPC\x12Q\n\x03Say\x12\x1f.libmumbot.protobuf.TextMessage\x1a\'.libmumbot.protobuf.TextMessageResponse\"\x00\x12\x66\n\x17SubscribeToTextMessages\x12&.libmumbot.protobuf.TextMessageRequest\x1a\x1f.libmumbot.protobuf.TextMessage\"\x00\x30\x01\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_TEXTMESSAGEREQUEST = _descriptor.Descriptor(
  name='TextMessageRequest',
  full_name='libmumbot.protobuf.TextMessageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='regex_search_pattern', full_name='libmumbot.protobuf.TextMessageRequest.regex_search_pattern', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=36,
  serialized_end=86,
)


_TEXTMESSAGERESPONSE = _descriptor.Descriptor(
  name='TextMessageResponse',
  full_name='libmumbot.protobuf.TextMessageResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='libmumbot.protobuf.TextMessageResponse.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=126,
)


_TEXTMESSAGE = _descriptor.Descriptor(
  name='TextMessage',
  full_name='libmumbot.protobuf.TextMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='libmumbot.protobuf.TextMessage.msg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=154,
)

DESCRIPTOR.message_types_by_name['TextMessageRequest'] = _TEXTMESSAGEREQUEST
DESCRIPTOR.message_types_by_name['TextMessageResponse'] = _TEXTMESSAGERESPONSE
DESCRIPTOR.message_types_by_name['TextMessage'] = _TEXTMESSAGE

TextMessageRequest = _reflection.GeneratedProtocolMessageType('TextMessageRequest', (_message.Message,), dict(
  DESCRIPTOR = _TEXTMESSAGEREQUEST,
  __module__ = 'MumBot_pb2'
  # @@protoc_insertion_point(class_scope:libmumbot.protobuf.TextMessageRequest)
  ))
_sym_db.RegisterMessage(TextMessageRequest)

TextMessageResponse = _reflection.GeneratedProtocolMessageType('TextMessageResponse', (_message.Message,), dict(
  DESCRIPTOR = _TEXTMESSAGERESPONSE,
  __module__ = 'MumBot_pb2'
  # @@protoc_insertion_point(class_scope:libmumbot.protobuf.TextMessageResponse)
  ))
_sym_db.RegisterMessage(TextMessageResponse)

TextMessage = _reflection.GeneratedProtocolMessageType('TextMessage', (_message.Message,), dict(
  DESCRIPTOR = _TEXTMESSAGE,
  __module__ = 'MumBot_pb2'
  # @@protoc_insertion_point(class_scope:libmumbot.protobuf.TextMessage)
  ))
_sym_db.RegisterMessage(TextMessage)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class MumBotRPCStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Say = channel.unary_unary(
        '/libmumbot.protobuf.MumBotRPC/Say',
        request_serializer=TextMessage.SerializeToString,
        response_deserializer=TextMessageResponse.FromString,
        )
    self.SubscribeToTextMessages = channel.unary_stream(
        '/libmumbot.protobuf.MumBotRPC/SubscribeToTextMessages',
        request_serializer=TextMessageRequest.SerializeToString,
        response_deserializer=TextMessage.FromString,
        )


class MumBotRPCServicer(object):

  def Say(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeToTextMessages(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MumBotRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Say': grpc.unary_unary_rpc_method_handler(
          servicer.Say,
          request_deserializer=TextMessage.FromString,
          response_serializer=TextMessageResponse.SerializeToString,
      ),
      'SubscribeToTextMessages': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeToTextMessages,
          request_deserializer=TextMessageRequest.FromString,
          response_serializer=TextMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'libmumbot.protobuf.MumBotRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaMumBotRPCServicer(object):
  def Say(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SubscribeToTextMessages(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaMumBotRPCStub(object):
  def Say(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Say.future = None
  def SubscribeToTextMessages(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()


def beta_create_MumBotRPC_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('libmumbot.protobuf.MumBotRPC', 'Say'): TextMessage.FromString,
    ('libmumbot.protobuf.MumBotRPC', 'SubscribeToTextMessages'): TextMessageRequest.FromString,
  }
  response_serializers = {
    ('libmumbot.protobuf.MumBotRPC', 'Say'): TextMessageResponse.SerializeToString,
    ('libmumbot.protobuf.MumBotRPC', 'SubscribeToTextMessages'): TextMessage.SerializeToString,
  }
  method_implementations = {
    ('libmumbot.protobuf.MumBotRPC', 'Say'): face_utilities.unary_unary_inline(servicer.Say),
    ('libmumbot.protobuf.MumBotRPC', 'SubscribeToTextMessages'): face_utilities.unary_stream_inline(servicer.SubscribeToTextMessages),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_MumBotRPC_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('libmumbot.protobuf.MumBotRPC', 'Say'): TextMessage.SerializeToString,
    ('libmumbot.protobuf.MumBotRPC', 'SubscribeToTextMessages'): TextMessageRequest.SerializeToString,
  }
  response_deserializers = {
    ('libmumbot.protobuf.MumBotRPC', 'Say'): TextMessageResponse.FromString,
    ('libmumbot.protobuf.MumBotRPC', 'SubscribeToTextMessages'): TextMessage.FromString,
  }
  cardinalities = {
    'Say': cardinality.Cardinality.UNARY_UNARY,
    'SubscribeToTextMessages': cardinality.Cardinality.UNARY_STREAM,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'libmumbot.protobuf.MumBotRPC', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
